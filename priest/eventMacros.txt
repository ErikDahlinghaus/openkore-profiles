# !include tu_eventMacros.txt

automacro TeleMVP {
    MobNearDist /(Gopinich|Mysteltainn)/ <20
    timeout 1
    call {
        do tele
    }
}

automacro anubis {
    MobNearDist /Anubis/ < 7
    timeout 60
    call {
        do sm 76 $.MobNearDistLastBinId
    }
}

automacro lex {
    PlayerNear /gururunt/
    timeout 4
    delay 1
    call {
        $targetId = activeTarget($.PlayerNearLastBinId)
        if ($targetId != undef) {
            do sm PR_LEXAETERNA $targetId
        }
    }
    disabled 1
}

sub activeTarget {
    foreach my $monster (@$monstersList) {
        if (keys %{$monster->{dmgFromPlayer}}) {
            message $monster->{binID} . "\n";
            return $monster->{binID};
        }
	}
    return undef
}

automacro hide {
    SimpleHookEvent packet_attack
    StatusInactiveHandle EFST_HIDING
    timeout 5
    disabled 1
    call {
        do p nameIDForActor($.SimpleHookEventLastTargetID)
        #if ( nameIDForActor($.SimpleHookEventLastTargetID) eq myID() && playersCount() > 0) {
        #    do ss TF_HIDING
        #}
    }
}

automacro unhide {
    StatusActiveHandle EFST_HIDING
    delay 1
    call {
        do ss TF_HIDING
    }
}

automacro respawn {
    PartyMsg /respawn/
    call {
        do tele 2
    }
}

automacro tele {
    PartyMsg /tele/
    call {
        do tele
    }
}

sub nameIDForActor {
    my $sourceID = shift;
    return Actor::get($sourceID)->{nameID}
}

sub myID {
    return $char->{nameID};
}

sub playersCount {
    return scalar(@$playersList);
}

sub monstersCount {
    return scalar(@$monstersList);
}

sub aggressivesCount {
    my $aggressivesCount = ai_getAggressives();
    return $aggressivesCount;
}